Git은 2005년 리누스 토르발스가 리눅스 커널을 관리하다가 리눅스 커널을 관리하는 도구가 너무 불편하다는 것을 못 참고 만들었다.

Git은 매우 빠른 속도와 분산형 저장소 지원이 특징이며, 현재 다양한 오픈소스 사이트에서 주요 버전 관리 시스템으로 사용중에 있다.

Git을 사용하기 이전에는 BitKeeper 라는 프로그램을 사용하여서 리눅스 커널을 관리하고 있었는데, BitKepper 측에서 리눅스 개발에 제한을 두자
만든 프로그램이 Git인 것이였다.

이렇게 만들어진 Git은 처음에는 자유 소프트웨어 진영으로 부터 엄청난 질타를 받았으나, 현재는 가장 큰 소프트웨어 회사인 Microsoft사
조차도 버전 관리하는데 사용되는 것이 Git 이라고 한다.

Git의 기본적인 작동 원리는 이렇하다.

로컬 저장소라는 이름으로 전체 데이터를 작업 폴더에 넣어 관리하는데, 이는 전체 히스토리와 각 히스토리 별로 어떠한 변경점이 있는 지를
저장하는 곳이다. 이것을 Git 원격 저장소로 다시 발행하여서 보관하는 것.

이에 Git은 다양한 장점이 있다.

우선 오프라인 작업이 가능하다. 기존에 사용하던 BitKeeper 같은 경우에는 온라인 상태에서만 작업이 가능하다는 단점이 있었는데 Git 같은 
경우에 로컬 저장소에 적극적인 기록을 남기기 때문에 가능한 것이다. 

또한 속도가 매우 빠르다. 각각의 개발자들이 자신이 주관하는 개발의 분산처리 서버의 주인이 되어서 나중에 데이터를 비교 분석하는 작업만
수행하기 때문이다.

브랜치를 생성하여서 관리하는 것도 괭장히 가볍다. 다른 형상관리 도구도 지원하는 기능이지만 Git 같은 경우에는 별 제약 없이 생성하고
삭제할 수가 있기 때문이다.

병합시에 문제가 덜 발생하는 것도 큰 장접이라고 한다.

이에 반하는 몇가지 단점도 있다. 입문하기 어려운 것이 단점이며, 작업 계층 구조를 추상화하기가 상당히 힘들다. 

서버에 저장소를 두고 로컬 머신에서는 작업중인 프로젝트만을 두는 것이 설계개념상 불가능하다. 
원격 저장소와 로컬 저장소를 모두 요구하기 때문에 저장소 전체를 받아서 작업해야 된다는 부분도 원하지 않는 경우 단점이다.

이러한 장단점을 가지고 있는 Git을 사용하는 대표적인 Git 저장소가 있다.

Github, BitBucket, GitLab 정도가 있다. 

원한다면 위에 서비스식 Git 저장소가 아닌 개인 호스팅도 가능하다.

Git은 참고로 윈도우 8버전부터 기본 탑재가 되어서 나온다고 한다.
